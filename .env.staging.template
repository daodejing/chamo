# ==============================================================================
# OurChat - Staging Environment Variables Template
# ==============================================================================
# Copy this file and configure for your staging environment
# NEVER commit actual secrets to version control
#
# For GitHub Actions: Add these as repository secrets
# For local staging testing: Copy to .env.staging.local
# ==============================================================================

# ------------------------------------------------------------------------------
# FRONTEND (Next.js) - Public Variables
# ------------------------------------------------------------------------------
# These are embedded in the client-side bundle, so don't put secrets here

# GraphQL API endpoints (staging)
NEXT_PUBLIC_GRAPHQL_HTTP_URL=https://your-staging-backend.onrender.com/graphql
NEXT_PUBLIC_GRAPHQL_WS_URL=wss://your-staging-backend.onrender.com/graphql

# Groq API for translation (client-side calls)
NEXT_PUBLIC_GROQ_API_KEY=your_groq_api_key_here

# ------------------------------------------------------------------------------
# BACKEND (NestJS) - Private Variables
# ------------------------------------------------------------------------------
# These are server-side only, never exposed to client

# Database (Neon PostgreSQL)
DATABASE_URL=postgresql://username:password@ep-xxxxx.region.aws.neon.tech/ourchat_staging?sslmode=require

# JWT Secrets (generate with: openssl rand -base64 32)
JWT_SECRET=your_jwt_secret_here_minimum_32_characters
REFRESH_TOKEN_SECRET=your_refresh_token_secret_here_minimum_32_characters

# CORS Configuration
CORS_ALLOWED_ORIGINS=https://ourchat-staging.pages.dev,http://localhost:3002

# Application Environment
NODE_ENV=staging
PORT=4000

# ------------------------------------------------------------------------------
# DEPLOYMENT - GitHub Actions Secrets
# ------------------------------------------------------------------------------
# Add these to GitHub repository secrets for CI/CD

# Cloudflare Pages
# CLOUDFLARE_API_TOKEN=your_cloudflare_api_token
# CLOUDFLARE_ACCOUNT_ID=your_cloudflare_account_id

# Render Deployment
# RENDER_DEPLOY_HOOK_URL=https://api.render.com/deploy/srv-xxxxx
# RENDER_API_KEY=rnd_xxxxxxxxxxxxx

# Staging URLs (for health checks)
# STAGING_FRONTEND_URL=https://ourchat-staging.pages.dev
# STAGING_BACKEND_URL=https://your-staging-backend.onrender.com
# STAGING_GRAPHQL_HTTP_URL=https://your-staging-backend.onrender.com/graphql

# Database URL for migrations (same as DATABASE_URL above)
# STAGING_DATABASE_URL=postgresql://username:password@ep-xxxxx.region.aws.neon.tech/ourchat_staging?sslmode=require

# ------------------------------------------------------------------------------
# OPTIONAL - Additional Services
# ------------------------------------------------------------------------------

# Cloudflare R2 (Object Storage for photos)
# R2_ACCOUNT_ID=your_r2_account_id
# R2_ACCESS_KEY_ID=your_r2_access_key
# R2_SECRET_ACCESS_KEY=your_r2_secret_key
# R2_BUCKET_NAME=ourchat-staging-photos
# R2_PUBLIC_URL=https://staging-photos.ourchat.com

# Google OAuth (Optional - for calendar integration)
# GOOGLE_CLIENT_ID=your_google_client_id
# GOOGLE_CLIENT_SECRET=your_google_client_secret

# Sentry (Error tracking - for production, optional for staging)
# SENTRY_DSN=https://xxxxx@xxxxx.ingest.sentry.io/xxxxx
# NEXT_PUBLIC_SENTRY_DSN=https://xxxxx@xxxxx.ingest.sentry.io/xxxxx

# ------------------------------------------------------------------------------
# SETUP INSTRUCTIONS
# ------------------------------------------------------------------------------
#
# 1. NEON POSTGRESQL DATABASE:
#    - Sign up at https://neon.tech
#    - Create project "ourchat-staging"
#    - Copy connection string to DATABASE_URL
#    - Free tier: 0.5GB storage, 191.9 compute hours/month
#
# 2. RENDER BACKEND:
#    - Sign up at https://render.com
#    - Create Web Service from Git repository
#    - Set root directory: apps/backend
#    - Add environment variables (DATABASE_URL, JWT_SECRET, etc.)
#    - Copy deploy hook URL for GitHub Actions
#    - Free tier: 750 hours/month, cold starts after 15min
#
# 3. CLOUDFLARE PAGES FRONTEND:
#    - Sign up at https://cloudflare.com
#    - Create Pages project
#    - Build command: pnpm build
#    - Build output: out
#    - Add environment variables (NEXT_PUBLIC_*)
#    - Copy API token and account ID for GitHub Actions
#    - Free tier: Unlimited bandwidth and builds
#
# 4. GITHUB SECRETS:
#    - Go to repository Settings > Secrets and variables > Actions
#    - Click "New repository secret"
#    - Add each secret from "DEPLOYMENT" section above
#    - Secrets are encrypted and never exposed in logs
#
# 5. GENERATE JWT SECRETS:
#    Run in terminal:
#    openssl rand -base64 32
#
#    Use different secrets for JWT_SECRET and REFRESH_TOKEN_SECRET
#
# ------------------------------------------------------------------------------
# COST SUMMARY (Free Tier)
# ------------------------------------------------------------------------------
# Frontend (Cloudflare Pages): $0/month
# Backend (Render Free): $0/month (with cold starts)
# Database (Neon Free): $0/month (0.5GB limit)
# Storage (Cloudflare R2): $0/month (10GB limit)
# GitHub Actions: $0/month (2000 minutes/month)
# ------------------------------------------------------------------------------
# TOTAL: $0/month for staging environment
# ------------------------------------------------------------------------------
#
# Upgrade path for production:
# - Render Starter: $7/month (no cold starts)
# - Neon Launch: $19/month (better performance)
# - Total: ~$27/month for always-on production
# ------------------------------------------------------------------------------
