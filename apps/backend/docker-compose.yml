version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ourchat_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ourchat_dev
      POSTGRES_USER: ourchat_user
      POSTGRES_PASSWORD: ourchat_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ourchat_user -d ourchat_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ourchat_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ourchat_backend
    restart: unless-stopped
    working_dir: /app/apps/backend
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: "postgresql://ourchat_user:ourchat_password@postgres:5432/ourchat_dev?schema=public"
      JWT_SECRET: "your-secret-key-change-in-production"
      JWT_REFRESH_SECRET: "your-refresh-secret-key-change-in-production"
      NODE_ENV: "development"
    volumes:
      - ../../:/app
    command: sh -c "cd /app/apps/backend && pnpm prisma generate && pnpm prisma migrate deploy && pnpm start:dev"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ourchat_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/graphql"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
    driver: local

networks:
  ourchat_network:
    driver: bridge
